name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (z.B. 1.2.0)'
        required: false
        type: string

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
      GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
      OSSRH_USER: ${{ secrets.OSSRH_USER }}
      OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Resolve version
        id: ver
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "VERSION=${GITHUB_REF##*/v}" >> "$GITHUB_ENV"
          else
            echo "VERSION=${{ github.event.inputs.version }}" >> "$GITHUB_ENV"
          fi

      - name: Setup JDK and settings.xml
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: 'maven'
          server-id: central
          server-username: "${{ secrets.OSSRH_USER }}"
          server-password: "${{ secrets.OSSRH_TOKEN }}"
          gpg-private-key: "${{ secrets.GPG_SECRET_KEY }}"
          gpg-passphrase: "GPG_PASSPHRASE"

      - name: Import public GPG key
        run: echo "${{ secrets.GPG_PUBLIC_KEY }}" | gpg --import --yes --always-trust

      - name: Set release version in POM
        run: mvn --batch-mode versions:set -DnewVersion=$VERSION

      - name: Build & sign artifacts
        run: mvn --batch-mode -P release verify -DskipTests

      - name: Deploy to Maven Central
        run: |
          mvn --batch-mode -P release deploy -DskipTests \
              -DperformRelease=true \
              -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}"
        env:
          MAVEN_USERNAME: "${{ secrets.OSSRH_USER }}"
          MAVEN_PASSWORD: "${{ secrets.OSSRH_TOKEN }}"

      - name: Generate release notes
        id: notes
        run: |
          PREV=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")
          if [[ -n "$PREV" ]]; then
            CHANGELOG="$(git log $PREV..HEAD --pretty=format:'- %s' --no-merges)"
          else
            CHANGELOG="$(git log --pretty=format:'- %s' --no-merges -n 50)"
          fi

          cat <<EOF > RELEASE_NOTES.md
          ## Maven Central
          \`\`\`xml
          <dependency>
            <groupId>io.github.afrouper</groupId>
            <artifactId>sungrow-api-client</artifactId>
            <version>$VERSION</version>
          </dependency>
          \`\`\`

          ## Changes
          $CHANGELOG
          EOF

      - name: Create release (and upload JARs)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body_path: RELEASE_NOTES.md
          files: |
            target/sungrow-api-client-${{ env.VERSION }}.jar
            target/sungrow-api-client-${{ env.VERSION }}-sources.jar
            target/sungrow-api-client-${{ env.VERSION }}-javadoc.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push tag (for manual workflow)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config user.name 'GitHub Actions'
          git config user.email 'actions@github.com'
          git tag -a v$VERSION -m "Release $VERSION"
          git push origin v$VERSION
